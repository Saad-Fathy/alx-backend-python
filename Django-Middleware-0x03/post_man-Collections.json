{
  "info": {
    "name": "Messaging App API Tests",
    "_postman_id": "7a8b9c2d-4e5f-4962-9e8b-7c8d9e2f3c4a",
    "description": "Tests for messaging app API endpoints including authentication, conversations, and messages.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Obtain JWT Token (User1)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"user1\", \"password\": \"password123\"}"
        },
        "url": {
          "raw": "http://localhost:8000/api/token/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "token", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response contains access token', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.access).to.be.a('string');",
              "    pm.collectionVariables.set('user1_token', jsonData.access);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Obtain JWT Token (User2 - Moderator)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"user2\", \"password\": \"password123\"}"
        },
        "url": {
          "raw": "http://localhost:8000/api/token/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "token", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response contains access token', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.access).to.be.a('string');",
              "    pm.collectionVariables.set('user2_token', jsonData.access);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Conversation (User2 - Moderator)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{user2_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"participants\": [2, 1]}"
        },
        "url": {
          "raw": "http://localhost:8000/api/conversations/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "conversations", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 201 for moderator', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test('Conversation created with participants', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.participants).to.include.members([2, 1]);",
              "    pm.collectionVariables.set('conversation_id', jsonData.id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Create Conversation (User1 - Regular)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"participants\": [1, 2]}"
        },
        "url": {
          "raw": "http://localhost:8000/api/conversations/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "conversations", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 403 for regular user', function () {",
              "    pm.response.to.have.status(403);",
              "    pm.expect(pm.response.text()).to.include('Access denied: Only admins or moderators can access this endpoint.');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Send Message (User1 - Regular)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"conversation\": {{conversation_id}}, \"content\": \"Hello, this is a test message!\"}"
        },
        "url": {
          "raw": "http://localhost:8000/api/messages/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "messages", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 403 for regular user', function () {",
              "    pm.response.to.have.status(403);",
              "    pm.expect(pm.response.text()).to.include('Access denied: Only admins or moderators can access this endpoint.');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Fetch Conversations (User1 - Regular)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          }
        ],
        "url": {
          "raw": "http://localhost:8000/api/conversations/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "conversations", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 403 for regular user', function () {",
              "    pm.response.to.have.status(403);",
              "    pm.expect(pm.response.text()).to.include('Access denied: Only admins or moderators can access this endpoint.');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Fetch Messages with Pagination (User1 - Regular)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          }
        ],
        "url": {
          "raw": "http://localhost:8000/api/messages/?page=1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "messages", ""],
          "query": [
            {
              "key": "page",
              "value": "1"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 403 for regular user', function () {",
              "    pm.response.to.have.status(403);",
              "    pm.expect(pm.response.text()).to.include('Access denied: Only admins or moderators can access this endpoint.');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Fetch Messages with Filter (User1 - Regular)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_token}}"
          }
        ],
        "url": {
          "raw": "http://localhost:8000/api/messages/?participant=2",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "messages", ""],
          "query": [
            {
              "key": "participant",
              "value": "2"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 403 for regular user', function () {",
              "    pm.response.to.have.status(403);",
              "    pm.expect(pm.response.text()).to.include('Access denied: Only admins or moderators can access this endpoint.');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Unauthorized Access (No Token)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8000/api/conversations/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "conversations", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 401 Unauthorized', function () {",
              "    pm.response.to.have.status(401);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Non-Participant Access (User3 - Admin)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user3_token}}"
          }
        ],
        "url": {
          "raw": "http://localhost:8000/api/messages/?conversation={{conversation_id}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "messages", ""],
          "query": [
            {
              "key": "conversation",
              "value": "{{conversation_id}}"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200 for admin', function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Obtain JWT Token (User3 - Admin)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"user3\", \"password\": \"password123\"}"
        },
        "url": {
          "raw": "http://localhost:8000/api/token/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8000",
          "path": ["api", "token", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response contains access token', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.access).to.be.a('string');",
              "    pm.collectionVariables.set('user3_token', jsonData.access);",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "user1_token",
      "value": ""
    },
    {
      "key": "user2_token",
      "value": ""
    },
    {
      "key": "user3_token",
      "value": ""
    },
    {
      "key": "conversation_id",
      "value": ""
    }
  ]
}